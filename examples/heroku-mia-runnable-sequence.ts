import { HerokuMia } from "../src";
import { ChatPromptTemplate } from "@langchain/core/prompts";
import { StringOutputParser } from "@langchain/core/output_parsers";
import {
  RunnableSequence,
  RunnablePassthrough,
} from "@langchain/core/runnables";

async function main() {
  console.log("‚õìÔ∏è Running HerokuMia RunnableSequence Chaining Example...");

  const llm = new HerokuMia({
    temperature: 0.7,
    maxTokens: 150,
  });

  // First prompt: Generate a creative concept
  const prompt1 = ChatPromptTemplate.fromMessages([
    [
      "system",
      "You are a creative assistant that generates interesting concepts.",
    ],
    [
      "human",
      "Generate a concept for a new sci-fi movie based on the theme: {theme}",
    ],
  ]);

  // Second prompt: Elaborate on the concept generated by the first call
  const prompt2 = ChatPromptTemplate.fromMessages([
    [
      "system",
      "You are a screenwriter assistant that elaborates on movie concepts.",
    ],
    [
      "human",
      "Write a short movie pitch (2-3 sentences) for the following concept: {concept}",
    ],
  ]);

  // Output parser
  const outputParser = new StringOutputParser();

  // Define the first part of the chain: input {theme: string} -> prompt1 -> llm -> outputParser -> string (concept)
  const chain1 = prompt1.pipe(llm).pipe(outputParser);

  // Construct the overall chain using RunnablePassthrough.assign
  // This ensures the output of chain1 ('concept') is added to the input for prompt2,
  // while also preserving the original input ('theme').
  const runnable = RunnableSequence.from([
    RunnablePassthrough.assign({
      // chain1 receives the initial input (e.g., {theme: "..."})
      // its output (the concept string) is assigned to the 'concept' key
      concept: chain1,
    }),
    // The output of RunnablePassthrough.assign (e.g., {theme: "...", concept: "..."})
    // is passed to prompt2
    prompt2,
    llm,
    outputParser,
  ]);

  try {
    console.log(
      "\n‚õìÔ∏è Invoking the chained sequence with RunnablePassthrough.assign...",
    );
    const initialInput = {
      theme: "artificial intelligence taking over a city",
    };
    const finalResult = await runnable.invoke(initialInput);

    console.log("\nüé¨ Initial Theme:", initialInput.theme);
    console.log("\nüé≠ Generated Movie Pitch:");
    console.log(finalResult);
  } catch (error) {
    console.error(
      "‚ùå Error during HerokuMia RunnableSequence chain execution:",
      error,
    );
    if (
      error instanceof Error &&
      error.message.includes("Missing value for input variable")
    ) {
      console.error(
        "üí° This error often means a prompt template did not receive an expected variable.",
      );
      console.error(
        "   Ensure all inputs to prompts (e.g., 'theme', 'concept') are correctly passed through the chain.",
      );
    }
  }
}

main().catch(console.error);
